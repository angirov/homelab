# Here we ensure (1) the kernel modules are there and (2) conternerd is installed and enabled

- hosts: K8s_nodes
  become: true
  tasks:
    - name: Edit kernel module configs
      ansible.builtin.lineinfile:
        path: "/etc/modules-load.d/k8s.conf"
        line: '{{ item }}'
        create: true
        mode: '0644'
      loop:
        - overlay
        - br_netfilter

    - name: Add kernel modules
      community.general.modprobe:
        name: '{{ item }}'
        state: present
      loop:
        - overlay
        - br_netfilter

      # https://docs.ansible.com/ansible/latest/collections/ansible/posix/sysctl_module.html
    - name: Sysctl params required by setup, so that they persist across reboots
      ansible.posix.sysctl:
        sysctl_file: /etc/sysctl.d/k8s.conf
        name: '{{ item.name }}'
        value: '{{ item.value }}'
        state: present
        reload: true
      loop:
        - name: 'net.bridge.bridge-nf-call-iptables'
          value: '1'
        - name: 'net.bridge.bridge-nf-call-ip6tables'
          value: '1'
        - name: 'net.ipv4.ip_forward'
          value: '1'
      # notify: Apply sysctl params without reboot
  # handlers:
  #   - name: Apply sysctl params without reboot
  #     ansible.builtin.command: sysctl --system

    - name: Unarchive a file that needs to be downloaded (added in 2.0)
      ansible.builtin.unarchive:
        src: https://github.com/containerd/containerd/releases/download/v1.7.10/containerd-1.7.10-linux-amd64.tar.gz
        dest: /usr/local
        remote_src: true
      notify: Systemd reread configs

    - name: Creates directory
      ansible.builtin.file:
        path: /usr/local/lib/systemd/system
        state: directory
        mode: '0755'
        owner: 'root'
        group: 'root'

    - name: Download containerd.service
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
        dest: /usr/local/lib/systemd/system/containerd.service
        mode: '0644'
        owner: 'root'
        group: 'root'

    - name: Enable containerd and ensure it is not masked
      ansible.builtin.systemd:
        name: containerd
        state: started
        enabled: true
        masked: false

  handlers:
    - name: Systemd reread configs
      ansible.builtin.systemd:
        daemon_reload: true
